version: '3.8'

services:
  web:
    build: .
    # Строим Docker образ для сервиса "web" из текущего каталога, где находится Dockerfile.
    ports:
      - "8080:8080"
    # Пробрасываем порт 8080 из контейнера на хост для доступа к веб-приложению.
    depends_on:
      - db
    # Указываем, что сервис "web" зависит от сервиса "db" и должен запуститься после него.
    environment:
    #блок environment в docker-compose.yml используется для задания переменных окружения, которые будут доступны внутри контейнера.
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      # Устанавливаем URL для подключения к базе данных PostgreSQL.
      - SPRING_DATASOURCE_USERNAME=postgres
      # Устанавливаем имя пользователя для подключения к PostgreSQL.
      - SPRING_DATASOURCE_PASSWORD=3791
      # Устанавливаем пароль пользователя для подключения к PostgreSQL.

  db:
    image: postgres:latest
    # Используем официальный образ PostgreSQL с Docker Hub, последнюю версию.
    environment:
      POSTGRES_DB: postgres
      # Задаем имя базы данных PostgreSQL, которая будет создана при запуске контейнера.
      POSTGRES_USER: postgres
      # Задаем имя пользователя для аутентификации в PostgreSQL.
      POSTGRES_PASSWORD: 3791
      # Устанавливаем пароль для пользователя PostgreSQL.
    volumes:
      - db-data:/var/lib/postgresql/data
      # Монтируем том "db-data" в директорию "/var/lib/postgresql/data" внутри контейнера для хранения данных PostgreSQL.

volumes:
  db-data:
  # Определяем именованный Docker том "db-data", который используется для хранения данных PostgreSQL.